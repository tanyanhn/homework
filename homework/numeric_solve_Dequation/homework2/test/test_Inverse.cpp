#include "catch.hpp"
#include "../src/Inverse.h"
#include <vector>
#include "equalrangematcher.h"

using namespace std;
using namespace Catch;
using namespace solver_ty;
using namespace integrator_ty;


SCENARIO("Inverse","[Inverse]"){
    int dim = 3;
    int size = dim*dim;
    Inverse inv(dim);
    Real A[] ={
        3,-1,-1,
        4,-2,-1,
        -3,2,1
    },
            B[] = {
                0.00 ,  1.00  , 1.00,
                1.00  , 0.00  , 1.00,
                -2.00 ,  3.00,   2.00,};
    inv(A);
    CHECK_THAT(vector<Real>(A, A+size), EqualsRange(vector<Real>(B, B+size), 1e-5));
    Real A2[] = {1.1, 4.8, -7.1, 0.1, -2, 7.1,
        1.3, 0.4, 0.8, -3.0, 9.1, 11.1,
        4.2, 5.1, 9.0, 4.3, -2.4, -10.3,
        0.1, 0.2, 0.3, 0.4, 0.5, 0.6,
        1,     3,   -1,  0,   9,  4 ,
        -4,  5.3, 6.1, 7.9, -1.2, 0},
            B2[] = {0.043466374626416 , -0.040080586817100 ,  0.071142874161661 ,  1.771775846684859,  -0.048502662580886,  -0.144204189301649,
        0.077629943297561 ,  0.080309519545010 ,  0.062002873950912 , -1.744869416298577 ,  0.060735746777811 ,  0.084114047194403,
        -0.035788886037018 ,  0.123507835797245 ,  0.046818640350926 , -0.470033930623765 , -0.088145883124448 ,  0.045670356295691,
        -0.009878879013729 , -0.175372942848611 , -0.044551594877985 ,  2.451505450038408  , 0.021748752337694 , -0.039767248441075,
        -0.048985123385719 , -0.038404707736566 , -0.018600131751868 ,  0.137312321147141 ,  0.125029470545491 , -0.010792401619867,
        0.032180254978838  , 0.067075558402104 , -0.010732917474164 ,  0.439246895315708 , -0.086778923946604  , 0.008666004648234};
    Inverse inv2(6);
    inv2(A2);
    size = 36;
    CHECK_THAT(vector<Real>(A2, A2+size), EqualsRange(vector<Real>(B2, B2+size), 1e-5));
}


SCENARIO("Inverse::Solverequations","[Inverse][Solverequations]"){
    Real A[] = {
        1, 2, 3, 4,
        0, 5, 6, 7,
        0, 0, 8, 9,
        0, 0, 0, 10
    },
            b[] = {
                10, 18, 17, 10
            };
    Inverse inv(4);
    inv.Solverequations(A,b);
    CHECK_THAT(vector<Real>({1, 1, 1, 1}), EqualsRange(vector<Real>(b, b + 4), 1e-10));
    Real A2[] = {1.1, 4.8, -7.1, 0.1, -2, 7.1,
        1.3, 0.4, 0.8, -3.0, 9.1, 11.1,
        4.2, 5.1, 9.0, 4.3, -2.4, -10.3,
        0.1, 0.2, 0.3, 0.4, 0.5, 0.6,
        1,     3,   -1,  0,   9,  4 ,
        -4,  5.3, 6.1, 7.9, -1.2, 0},
            B2[] = {1, 1, 1, 1, 1, 1},
            aim[] ={
                1.653597656773300,
                -1.380077285532880,
                -0.377971867341369,
                2.203683537194702,
                0.145559427198612,
                0.449656871924117,
            };
    Inverse inv6(6);
    inv6.Solverequations(A2,B2);
    CHECK_THAT(vector<Real>(aim, aim+6), EqualsRange(vector<Real>(B2, B2+6), 1e-10));
}
